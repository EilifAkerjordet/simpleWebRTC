{"ast":null,"code":"var _jsxFileName = \"/Users/eilif.akerjordet/HobbyProjects/WebRTC/client/src/Routes/Room.jsx\";\nimport React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst Room = props => {\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const socketRef = useRef();\n  const otherUser = useRef();\n  const userStream = useRef();\n\n  const handleNegotiationNeededEvent = userID => {\n    peerRef.current.createOffer().then(offer => peerRef.current.setLocalDescription(offer)).then(() => {\n      const payload = {\n        target: userID,\n        caller: socketRef.current.id,\n        sdp: peerRef.current.localDescription\n      };\n      socketRef.current.emit('offer', payload);\n    }).catch(e => console.log(e));\n  };\n\n  const createPeer = userID => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.stunprotocol.org'\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    peer.onicecandidate = handleNewICECandidateEvent;\n    peer.ontrack = handleTrackEvent;\n\n    peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n    return peer;\n  };\n\n  const handleRecieveCall = incoming => {\n    peerRef.current = createPeer();\n    const desc = new RTCSessionDescription(incoming.sdp);\n    peerRef.current.setRemoteDescription(desc).then(() => userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current))).then(() => peerRef.current.createAnswer()).then(answer => peerRef.current.setLocalDescription(answer)).then(() => {\n      const payload = {\n        target: incoming.caller,\n        caller: socketRef.current.id,\n        sdp: peerRef.current.localDescription\n      };\n      socketRef.current.emit('answer', payload);\n    });\n  };\n\n  const handleAnswer = message => {\n    const desc = new RTCSessionDescription(message.sdp);\n    peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n  };\n\n  const handleNewICECandidateEvent = e => {\n    if (e.candidate) {\n      const payload = {\n        target: otherUser.current,\n        candidate: e.candidate\n      };\n      socketRef.current.emit('ice-candidate', payload);\n    }\n  };\n\n  const handleNewICECandidateMsg = incoming => {\n    const candidate = new RTCIceCandidate(incoming);\n    peerRef.current.addIceCandidate(candidate).catch(e => console.log(e));\n  };\n\n  const callUser = userID => {\n    peerRef.current = createPeer(userID);\n    userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      userStream.current = stream;\n      socketRef.current = io.connect('/');\n      socketRef.current.emit('join room', props.match.params.roomID);\n      socketRef.current.on('other user', userID => {\n        callUser(userID);\n        otherUser.current = userID;\n      });\n      socketRef.current.on('user joined', userID => {\n        otherUser.current = userID;\n      });\n      socketRef.current.on('offer', handleRecieveCall);\n      socketRef.current.on('answer', handleAnswer);\n      socketRef.current.on('ice-candidate', handleNewICECandidateMsg);\n    });\n  }, []);\n\n  const handleTrackEvent = e => {\n    partnerVideo.current.srcObject = e.streams[0];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: userVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    ref: partnerVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/eilif.akerjordet/HobbyProjects/WebRTC/client/src/Routes/Room.jsx"],"names":["React","useEffect","useRef","io","Room","props","userVideo","partnerVideo","peerRef","socketRef","otherUser","userStream","handleNegotiationNeededEvent","userID","current","createOffer","then","offer","setLocalDescription","payload","target","caller","id","sdp","localDescription","emit","catch","e","console","log","createPeer","peer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleNewICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","handleRecieveCall","incoming","desc","RTCSessionDescription","setRemoteDescription","getTracks","forEach","track","addTrack","createAnswer","answer","handleAnswer","message","candidate","handleNewICECandidateMsg","RTCIceCandidate","addIceCandidate","callUser","navigator","mediaDevices","getUserMedia","audio","video","stream","srcObject","connect","match","params","roomID","on","streams"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst Room = props => {\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const socketRef = useRef();\n  const otherUser = useRef();\n  const userStream = useRef();\n\n  const handleNegotiationNeededEvent = userID => {\n    peerRef.current.createOffer()\n      .then(offer => peerRef.current.setLocalDescription(offer))\n      .then(() => {\n        const payload = {\n          target: userID,\n          caller: socketRef.current.id,\n          sdp: peerRef.current.localDescription,\n        };\n        socketRef.current.emit('offer', payload);\n      })\n      .catch(e => console.log(e));\n  };\n\n  const createPeer = userID => {\n    const peer = new RTCPeerConnection({\n      iceServers: [\n        {\n          urls: 'stun:stun.stunprotocol.org',\n        },\n        {\n          urls: 'turn:numb.viagenie.ca',\n          credential: 'muazkh',\n          username: 'webrtc@live.com',\n        },\n      ],\n    });\n    peer.onicecandidate = handleNewICECandidateEvent;\n    peer.ontrack = handleTrackEvent;\n    peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n    return peer;\n  };\n\n  const handleRecieveCall = incoming => {\n    peerRef.current = createPeer();\n    const desc = new RTCSessionDescription(incoming.sdp);\n    peerRef.current.setRemoteDescription(desc)\n      .then(() => userStream.current.getTracks()\n        .forEach(track => peerRef.current.addTrack(track, userStream.current)))\n      .then(() => peerRef.current.createAnswer())\n      .then(answer => peerRef.current.setLocalDescription(answer))\n      .then(() => {\n        const payload = {\n          target: incoming.caller,\n          caller: socketRef.current.id,\n          sdp: peerRef.current.localDescription,\n        };\n        socketRef.current.emit('answer', payload);\n      });\n  };\n\n  const handleAnswer = message => {\n    const desc = new RTCSessionDescription(message.sdp);\n    peerRef.current.setRemoteDescription(desc)\n      .catch(e => console.log(e));\n  };\n\n  const handleNewICECandidateEvent = e => {\n    if (e.candidate) {\n      const payload = {\n        target: otherUser.current,\n        candidate: e.candidate,\n      }\n      socketRef.current.emit('ice-candidate', payload);\n    }\n  };\n\n  const handleNewICECandidateMsg = incoming => {\n    const candidate = new RTCIceCandidate(incoming);\n    peerRef.current.addIceCandidate(candidate)\n      .catch(e => console.log(e));\n  };\n\n  const callUser = userID => {\n    peerRef.current = createPeer(userID);\n    userStream.current.getTracks()\n      .forEach(track => peerRef.current.addTrack(track, userStream.current));\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n      .then(stream => {\n        userVideo.current.srcObject = stream;\n        userStream.current = stream;\n\n        socketRef.current = io.connect('/');\n        socketRef.current.emit('join room', props.match.params.roomID);\n\n        socketRef.current.on('other user', userID => {\n          callUser(userID);\n          otherUser.current = userID;\n        });\n\n        socketRef.current.on('user joined', userID => {\n          otherUser.current = userID;\n        });\n\n        socketRef.current.on('offer', handleRecieveCall);\n        socketRef.current.on('answer', handleAnswer);\n        socketRef.current.on('ice-candidate', handleNewICECandidateMsg);\n      });\n  }, []);\n\n  const handleTrackEvent = e => {\n    partnerVideo.current.srcObject = e.streams[0];\n  };\n\n  return (\n    <div>\n      <video autoPlay ref={userVideo} />\n      <video autoPlay ref={partnerVideo} />\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}